{"version":3,"sources":["./src/app/components/dashboard/dashboard.module.ts","./src/app/services/menu.service.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/inicio/inicio.component.ts","./src/app/components/dashboard/inicio/inicio.component.html","./src/app/components/dashboard/reportes/reportes.component.ts","./src/app/components/dashboard/reportes/reportes.component.html","./src/app/components/dashboard/dashboard-routing.module.ts","./src/app/components/dashboard/usuarios/crear-usuario/crear-usuario.component.ts","./src/app/components/dashboard/usuarios/crear-usuario/crear-usuario.component.html","./src/app/services/usuario.service.ts","./src/app/components/dashboard/usuarios/usuarios.component.ts","./src/app/components/dashboard/usuarios/usuarios.component.html","./src/app/components/dashboard/navbar/navbar.component.html","./src/app/components/dashboard/navbar/navbar.component.ts"],"names":[],"mappings":"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","file":"components-dashboard-dashboard-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { InicioComponent } from './inicio/inicio.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { UsuariosComponent } from './usuarios/usuarios.component';\nimport { ReportesComponent } from './reportes/reportes.component';\nimport { CrearUsuarioComponent } from './usuarios/crear-usuario/crear-usuario.component';\n\n\n@NgModule({\n  declarations: [\n  DashboardComponent,\n  InicioComponent,\n  NavbarComponent,\n  UsuariosComponent,\n  ReportesComponent,\n  CrearUsuarioComponent,\n  ],\n imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    SharedModule,\n  ]\n})\nexport class DashboardModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Menu } from '../interfaces/menu';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n\n  constructor( private http: HttpClient) { }\n\n  getMenu(): Observable<Menu[]> {\n  return this.http.get<Menu[]>('./assets/data/menu.json');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <mat-toolbar>\n        <span>Dashboard</span>\n    </mat-toolbar>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reportes',\n  templateUrl: './reportes.component.html',\n  styleUrls: ['./reportes.component.css']\n})\nexport class ReportesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <mat-toolbar>\n        <span>Reportes</span>\n    </mat-toolbar>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\nimport { InicioComponent } from './inicio/inicio.component';\nimport { ReportesComponent } from './reportes/reportes.component';\nimport { CrearUsuarioComponent } from './usuarios/crear-usuario/crear-usuario.component';\nimport { UsuariosComponent } from './usuarios/usuarios.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, children: [\n  { path: '', component: InicioComponent },\n  { path: 'usuarios', component: UsuariosComponent },\n  { path: 'reportes', component: ReportesComponent },\n  { path: 'crear-usuario', component: CrearUsuarioComponent },\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { usuario } from 'src/app/interfaces/usuarios';\nimport { UsuarioService } from 'src/app/services/usuario.service';\n\n@Component({\n  selector: 'app-crear-usuario',\n  templateUrl: './crear-usuario.component.html',\n  styleUrls: ['./crear-usuario.component.css']\n})\nexport class CrearUsuarioComponent implements OnInit {\n  sexo: any[] = ['Masculino', 'Femenino'];\n  form: FormGroup;\n  constructor(private fb: FormBuilder, \n              private _usuarioService: UsuarioService,\n              private router: Router,\n              private _snackBar: MatSnackBar) {\n    this.form = this.fb.group({\n      usuario: ['', Validators.required],\n      nombre: ['', Validators.required],\n      apellido: ['', Validators.required],\n      sexo : ['', Validators.required],\n     })\n  }\n\n  ngOnInit(): void {\n  }\n\n  agregarUsuario() {\n    const user: usuario = {\n      usuario: this.form.value.usuario,\n      nombre: this.form.value.nombre,\n      apellido: this.form.value.apellido,\n      sexo: this.form.value.sexo,\n    }\n    this._usuarioService.agregarUsuario(user);\n    this.router.navigate(['/dashboard/usuarios']);\n\n    this._snackBar.open('El usuario fue agregado con exito', '', {\n      duration: 3000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n  }\n\n}\n","<div class=\"container\">\n    <mat-toolbar>\n        <span>Crear Usuario</span>\n    </mat-toolbar>\n\n    <mat-card style=\"margin-top: 10px\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"agregarUsuario()\">\n            <mat-grid-list cols=\"4\" rowHeight=\"70px\">\n                <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n                    <mat-form-field class=\"ancho\">\n                        <mat-label>Usuario</mat-label>\n                        <input matInput autocomplete=\"off\" formControlName=\"usuario\">\n                    </mat-form-field>\n                </mat-grid-tile>\n\n                <mat-grid-tile [colspan]=\"3\" [rowspan]=\"5\">\n                    <img src=\"./assets/img/man.png\" width=\"250\" height=\"250\">\n                </mat-grid-tile>\n                <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n                    <mat-form-field class=\"ancho\">\n                        <mat-label>Nombre</mat-label>\n                        <input matInput autocomplete=\"off\" formControlName=\"nombre\">\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n                    <mat-form-field class=\"ancho\">\n                        <mat-label>Apellido</mat-label>\n                        <input matInput autocomplete=\"off\" formControlName=\"apellido\">\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n                    <mat-form-field class=\"ancho\">\n                        <mat-label>Sexo</mat-label>\n                        <mat-select formControlName=\"sexo\">\n                            <mat-option *ngFor=\"let item of sexo\" [value]=\"item\">\n                                {{item}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n                    <button mat-raised-button style=\"margin-right: 20px;\">Volver</button>\n                    <button type=\"submit\" [disabled]=\"form.invalid\" mat-raised-button color=\"primary\">Aceptar</button>\n                </mat-grid-tile>\n            </mat-grid-list>\n\n        </form>\n    </mat-card>\n</div>","import { Injectable } from '@angular/core';\nimport { usuario } from '../interfaces/usuarios';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n    listUsuarios: usuario [] = [\n  // tslint:disable-next-line: quotemark\n  {usuario: 'iona@gmail.com', nombre: 'Iona ', apellido: 'Pillancar', sexo: 'femenino'},\n  {usuario: 'juan@gmail.com', nombre: 'juan ', apellido: 'Gomez    ', sexo: 'masculino'},\n  {usuario: 'pedro@gmail.com', nombre: 'Pedro', apellido: 'Luque    ', sexo: 'masculino'},\n  {usuario: 'luis@gmail.com', nombre: 'Luis ', apellido: 'Ruz      ', sexo: 'masculino'},\n  {usuario: 'adri@gmail.com', nombre: 'Adri ', apellido: 'asho     ', sexo: 'masculino'},\n  {usuario: 'ana@gmail.com', nombre:  'Ana  ', apellido: 'Paz      ', sexo: 'femenino'},\n  {usuario: 'elsa@gmail.com', nombre: 'Elsa ', apellido: 'Chapa    ', sexo: 'femenino'},\n  {usuario: 'lola@gmail.com', nombre: 'Lola ', apellido: 'Parra    ', sexo: 'femenino'},\n  {usuario: 'ruben@gmail.com', nombre: 'Ruben', apellido: 'Perez    ', sexo: 'masculino'}];\n\n  constructor() { }\n\n  getUsuario() {\n    return this.listUsuarios.slice();\n    // slice retorna una copia del listado de usuarios\n  }\n  eliminarUsuario(index: number) {\n    this.listUsuarios.splice(index, 1);\n    // El método splice() cambia el contenido de un array eliminando elementos existentes y/o agregando nuevos elementos.\n    // param(ubicacion, cuantos elementos)\n  }\n  // tslint:disable-next-line: no-shadowed-variable\n  agregarUsuario( usuario: usuario) {\n    this.listUsuarios.unshift(usuario);\n    // unshift agrega un nuevo elemento al comienzo de array\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { usuario } from 'src/app/interfaces/usuarios';\nimport { UsuarioService } from 'src/app/services/usuario.service';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css']\n})\nexport class UsuariosComponent implements OnInit {\n\n   listUsuarios: usuario[] = [];\n\n   displayedColumns: string[] = ['usuario', 'nombre', 'apellido', 'sexo', 'acciones'];\n   dataSource!: MatTableDataSource<any>;\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   // asercion(sentecia) not null. su operando no puede ser nulo\n   @ViewChild(MatSort) sort!: MatSort;\n\n  // tslint:disable-next-line: variable-name\n  constructor( private _usuarioService: UsuarioService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.cargarUsuarios();\n  }\n\n  cargarUsuarios() {\n    this.listUsuarios = this._usuarioService.getUsuario();\n    this.dataSource = new MatTableDataSource(this.listUsuarios)\n    // igualo dataSource a una instancia de MatTableDataSource  a la que le asigno el listado de usuarios\n  }\n\n  // tslint:disable-next-line: use-lifecycle-interface\n  // tslint:disable-next-line: typedef\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n  }\n   // tslint:disable-next-line: typedef\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  eliminarUsuario(index: number) {\n    console.log(index);\n    this._usuarioService.eliminarUsuario(index);\n    this.cargarUsuarios();\n\n    this._snackBar.open('El usuario fue eliminado con exito', '', {\n      duration: 3000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n   }\n}\n","<div class=\"container\">\n    <mat-toolbar>\n        <span>Usuarios</span>\n        <div class=\"example-spacer\"></div>\n        <button mat-raised-button color=\"primary\" routerLink=\"/dashboard/crear-usuario\">Agregar</button>\n    </mat-toolbar>\n\n    <div *ngIf=\"listUsuarios.length > 0\">\n        <mat-form-field>\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input autocomplete=\"off\">\n        </mat-form-field>\n\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n                <!-- Position Column -->\n                <ng-container matColumnDef=\"usuario\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Usuario </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.usuario}} </td>\n                </ng-container>\n\n                <!-- Name Column -->\n                <ng-container matColumnDef=\"nombre\">\n                    <th mat-header-cell *matHeaderCellDef> Nombre </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.nombre}} </td>\n                </ng-container>\n\n                <!-- Weight Column -->\n                <ng-container matColumnDef=\"apellido\">\n                    <th mat-header-cell *matHeaderCellDef> Apellido </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.apellido}} </td>\n                </ng-container>\n\n                <!-- Symbol Column -->\n                <ng-container matColumnDef=\"sexo\">\n                    <th mat-header-cell *matHeaderCellDef> Sexo </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.sexo}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"acciones\">\n                    <th mat-header-cell *matHeaderCellDef></th>\n                    <td mat-cell *matCellDef=\"let elementm ; let i = index\" style=\"text-align:right\">\n                        <a class=\"pointer\" style=\"color: rgb(50, 195, 205)\" matTooltip=\"ver usuario\">\n                            <mat-icon>search</mat-icon>\n                        </a>\n                        <a class=\"pointer\" style=\"color: rgb(6, 121, 252)\" matTooltip=\"editar usuario\">\n                            <mat-icon>edit</mat-icon>\n                        </a>\n                        <a class=\"pointer\" (click)=\"eliminarUsuario(i)\" style=\"color: rgb(245, 75, 75)\" matTooltip=\"eliminar usuario\">\n                            <mat-icon>delete</mat-icon>\n                        </a>\n\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n        </div>\n    </div>\n    <h2 *ngIf=\"listUsuarios.length == 0\">No hay usuarios para mostrar</h2>\n</div>","<mat-toolbar color=\"primary\">\n    <span>AppUsers</span>\n    <span class=\"example-spacer\"></span>\n    <button mat-button *ngFor=\"let item of menu\" [routerLink]=\"item.redirect\">{{ item.nombre }}</button>\n\n    <span class=\"example-spacer\"></span>\n    <!-- <button mat-button routerLink=\"/dashboard\">LogOut</button> -->\n    <button mat-icon-button class=\"example-icon\" routerLink=\"/\" aria-label=\"Example icon-button with menu icon\">\n      <mat-icon>logout</mat-icon>\n    </button>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Menu } from 'src/app/interfaces/menu';\nimport { MenuService } from 'src/app/services/menu.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  menu: Menu[] = [];\n\n  // tslint:disable-next-line: variable-name\n  constructor( private _menuService: MenuService) { }\n\n  ngOnInit(): void {\n    this.cargarMenu();\n  }\n  // tslint:disable-next-line: typedef\n  cargarMenu() {\n    this._menuService.getMenu().subscribe(data => {\n      console.log(data);\n      this.menu = data;\n    });\n\n  }\n\n}\n"],"sourceRoot":"webpack:///"}